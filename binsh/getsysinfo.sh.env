

# Copyright (c) 2005-2019 Colin Pearse.
# All scripts are free in the binscripts repository but please refer to the
# LICENCE file at the top-level directory for the conditions of distribution.
#
# Name:         getsysinfo.sh.env
# Description:  Extra commands to run with getsysinfo.sh


GETSYSINFO_ENV_VERSION="0.1"  # environment files cannot have VERSION otherwise it will overwrite the calling script

#################
# Variables set:
# HOSTNAME      # from uname -n
# OSn           # EG: Linux, Sun, HP-UX, AIX
# Username      # uses id and gets the first string between ()
# CMD_TIMEOUT   # 300 seconds = 5 mins
# PATH          # /usr/xpg4/bin:/etc:/sbin:/bin:/usr/sbin:/usr/bin:/usr/platform/$ARCH/sbin:/usr/cluster/bin:/usr/es/sbin/cluster:/usr/es/sbin/cluster/utilities:/usr/local/bin:$PATH:/usr/ucb:/usr/ccs/bin
# OSv           # EG: 1.5.19(0.150/4/2), 5.10, 11.00, 5.3
# OSvnum        # EG. 1, 10, 11, 5  (for Sun the digit after decimal point is taken because it is more significant)
# Heading       # EG. EXTRA
#################
# Functions:
# run      0 "command"
# run_loop 0 "command that gives n lines of output and 3 args each line" "command that is executed n times using args \$1 \$2 \$3"
# EG.
# run      0 "find /etc/pam.d -xdev -exec ls -ld {} \;"
# run_loop 0 "find /etc/pam.d -xdev -exec file {} \; |grep -v data |grep text |sed 's/:[	 ].*//1'" "cat -v \$1"
#
# OUTPUT and program options:
# -v runs commands with a 0 against the run function, -vv with 0 and 1, and so forth
# -h displays Header:Command:Output, while -hh displays Hostname:Header:Command:Output
#################

# WARNING ----
#    pbrun caused the following problem - it executed a root profile that churned out endless 'what terminal' messages to the temp output file.
#    Since the script was run as a normal user it could not kill the command that pbrun had run even after the CMD_MAX_OUTPUT_SIZE had been exceeded.
#CMDpbrun=""
#which pbrun >/dev/null 2>&1 && [[ "$user" != "root" ]] && CMDpbrun="pbrun "
# WARNING ----

#export PATH=$PATH:/usr/sbin/hbanyware

#run 0 "powermt display dev=all"

#run      0 "hbacmd list"
#run_loop 0 "hbacmd list 2>/dev/null |grep '^Port WWN' |cut -d: -f2-" "hbacmd target \$1"

